version: '3.8'

services:
  voiceattendance:
    build: .
    ports:
      - "5000:5000"
    environment:
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - FLASK_ENV=${FLASK_ENV:-production}
      - UPLOAD_FOLDER=/app/voice_samples
      - HOST=0.0.0.0
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-yourpassword}@postgres:5432/${POSTGRES_DB:-voiceattendance}
    volumes:
      # Persist voice samples and uploads
      - ./voice_samples:/app/voice_samples
      - ./uploads:/app/uploads
      - ./data:/app/data
    depends_on:
      - postgres
    restart: unless-stopped
    # Optional: Add health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-yourpassword}
      - POSTGRES_DB=${POSTGRES_DB:-voiceattendance}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:

# Optional: Add a reverse proxy like nginx
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - voiceattendance
